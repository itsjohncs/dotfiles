#!/usr/bin/env bash

## Alternative interface to git-stash

set -e

if [[ $# -eq 1 && $1 = all ]]; then
    git add --all
    git stash push
elif [[ $# -eq 1 && $1 = unstaged ]]; then
    SHORT_HEAD="$(git rev-parse --short HEAD)"
    git commit --no-verify --quiet --message "nopush: temporary commit"
    git add --all
    git stash push --message "unstaged changes off of $SHORT_HEAD" "${@:2}"
    git reset --soft "HEAD~1"
elif [[ $# -eq 1 && $1 = pop ]]; then
    STASH_COMMIT="$(git rev-parse --revs-only 'stash@{0}' -- 2> /dev/null || true)"
    if [[ -n $STASH_COMMIT ]] &&
            git log --format=%s --max-count=1 "$STASH_COMMIT" |
            grep -E --quiet ": unstaged changes off of [^ ]+$"; then
        # Pops the changes without affecting the index, preserving the unstaged
        # nature of the stashed changes.
        TMP_INDEX="$(mktemp -u)"
        cp -f "$(git rev-parse --git-dir)/index" "$TMP_INDEX"
        GIT_INDEX_FILE="$TMP_INDEX" git stash pop
        rm "$TMP_INDEX"
    else
        git stash pop
    fi
else
    echo "FATAL: unknown subcommand $*"
fi
