#!/usr/bin/env bash

## Copy or print names of all changed files in a git repo.

set -eo pipefail

if [[ $# -gt 1 || ! ${1-} =~ ^(-p|-c)?$ ]]; then
    echo "$0"
    echo
    echo "Copy names of all changed files in a git repo. Names"
    echo "with spaces will be quoted."
    echo
    echo "If stdout is not a terminal, the changed files will be"
    echo "printed instead with null characters delimiting them."
    echo
    echo "Use -p to force printing or -c to force copying."
    exit 1
fi

CURRENT_DIR="$PWD"

mapfile -d "" -t FILES < <(
    git status --porcelain |
        sed -E "s/^RM? .+ -> (.+)$/M  \1/" | # Treat renames same as modifications
        cut -c 4- |
        (
            cd "$(git rev-parse --show-toplevel)"
            gxargs -r --delimiter="\n" realpath -z --relative-to "$CURRENT_DIR"
        )
)

if [[ ${1-} = -c || ( ${1-} != -p && -t 1 ) ]]; then
    printf "%q " "${FILES[@]}" | cb
    echo "Copied ${#FILES[@]} file names."
else
    printf "%s\0" "${FILES[@]}"
fi
